<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- $Id$ -->

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
          "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">
<book>
  <bookinfo>
    <title>Open eGovernment Developer's Guide</title>
    <authorgroup>
      <corpauthor>OEG Team</corpauthor>
    </authorgroup>
    <copyright>
      <year>2009, 2010</year>
      <holder>Gerrit M. Albrecht</holder>
    </copyright>
    <legalnotice>
      <para>This work is licensed under the Creative Commons Attribution License. To view a copy of this license, visit <ulink url="http://creativecommons.org/licenses/by/2.5/">http://creativecommons.org/licenses/by/2.5/</ulink> or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.</para>
    </legalnotice>
  </bookinfo>

  <chapter>
    <title>Introduction for Developers</title>
    <section>
      <title>Overview</title>
      <para>.</para>
    </section>
    <section>
      <title></title>
      <para>.</para>
    </section>
  </chapter>

  <chapter>
    <title>Setup from Scratch</title>
    <section>
      <title>Overview</title>
      <para>This chapter describes the steps needed to get an environment for building
own applications with latest tools and without using prebuilt packages from this project.</para>
    </section>
    <section>
      <title>Preparation and Setup</title>
      <para>To build everything you first need a setup with some prebuilt stuff. Applications need e.g. gettext and it's simpler to use a binary version to build the "builder" package (which needs gettext). Later you may rebuild such applications and all of their dependent packages.
</para>
      <para>The first setup step is the installation of Qt. Retrieve a complete development package (with MinGW and precompiled libraries) from <ulink url="http://qt.nokia.com/">qt.nokia.com</ulink>, because it is all you need to be ready for working. Then download the Open eGovernment source package and extract it to any path you want. This is your base installation path. You don't need to set an environment variable. It's possible to put the directory structure onto an USB stick.</para>
      <para>To build applications you need a lot of standard tools and applications. Most of them only compile with patches or when other tools are available. So you have to build a nearly complete GNU toolchain.</para>
      <para>Independent binary tools may be downloaded from their respective websites. The following tools may be installed as binaries:
        <itemizedlist>
          <listitem><para>Git,</para></listitem>
          <listitem><para>Perl.</para></listitem>
        </itemizedlist>
      </para>
    </section>
  </chapter>

  <chapter>
    <title>Directory Structure</title>
    <section>
      <title>Overview</title>
      <para></para>
    </section>
    <section>
      <title>Packs</title>
      <para>Every package, OEG is able to use, can be found in the subdirectory "packs".
A pack is a package which contains download and build instructions, patches,
dependencies and other information used to compile a package and integrate
it into the OEG directory structure.</para>
      <para>The directory packs/archives contains binary archives which can be installed
without compiling them yourself. The packs/instructions contains files needed
to build a pack from zero. This directory needs to get recursively updated
every time you want install something new in order to always use the latest
sources and instrcutions. The directory packs/downloads contains distributed
source codes downloaded from the homepages of the packs.</para>
    </section>
  </chapter>

  <chapter>
    <title>Application Development</title>
    <section>
      <title>Overview</title>
      <para>The best method to get ready is using the template application.</para>
      <para>Every application may, at its option, use Qt's or OEG's classes. It's recommended to
      make use of the (enhanced) OEG classes, which provide a lot of standard-offer capabilities
      already built-in. The common way to open your application's window is to derive a class from
      OEG::Qt::MainWindow.</para>
      <para>While development it may help to add "CONFIG += console" into your .pro file.</para>
    </section>
  </chapter>

  <chapter>
    <title>DBUS Scripting</title>
    <section>
      <title>Overview</title>
      <para></para>
    </section>
  </chapter>

  <chapter>
    <title>File storage</title>
    <section>
      <title>Overview</title>
      <para>Documents may be stored into databases and XML files. This is configurable.</para>
    </section>
  </chapter>
</book>

