<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- $Id$ -->

<pack name="gnupg" license="GPL-2">
  <meta>
    <homepage>http://www.gnupg.org/</homepage>
    <download>http://www.gnupg.org/download/</download>
    <download>ftp://ftp.gnupg.org/gcrypt/gnupg/</download>
    <descriptions>
      <description lang="en" type="short"></description>
      <description lang="en" type="long"></description>
      <description lang="de" type="short"></description>
      <description lang="de" type="long"></description>
    </descriptions>
  </meta>

  <comments>
alert:  Building GnuPG as 64 bit programs is not supported.

http://clbianco.altervista.org/gnupg/eng/gnupg.html

iconv -f LATIN1 -t cp850 po/it.po > po/it2.po && mv po/it2.po po/it.po && msgfmt -o po/it.gmo po/it.po
where "it" can be changed with the localization file of your choice (e.g., "fr" for French, "es" for Spanish, ecc.) and "cp850" must of course be changed with the actual codepage (some sort of "character table") used by your Windows version in the command prompt windows. The codepage 850 is the one, so called, of Western Europe, and it is used by Italian versions. To know the codepage used by your Windows version, open a command prompt window and use the command "chcp". If you are interested in more than a GnuPG localization, repeat this point "e" for all the localization files of your choice.

GnuPG installation procedure, described in the README-W32.txt file, creating the required registry keys.
  </comments>

  <set version="1.4.16" date="2013-12-18" state="works">
    <flags>
    </flags>

    <downloads>
      <download file="gnupg-1.4.16.tar.bz2">
        <url type="direct" checked="2014-01-22">ftp://ftp.gnupg.org/gcrypt/gnupg/gnupg-1.4.16.tar.bz2</url>
        <hash type="CRC32"></hash>
        <hash type="MD5"></hash>
        <hash type="SHA1"></hash>
        <hash type="SHA512"></hash>
        <hash type="RIPEMD256"></hash>
        <size></size>
      </download>
    </downloads>

    <commands>
  --disable-gpg           do not build the gpg program
  --disable-gpgsm         do not build the gpgsm program
  --disable-agent         do not build the agent program
  --disable-scdaemon      do not build the scdaemon program
  --disable-tools         do not build the tools program
  --disable-doc           do not build the doc program
  --enable-symcryptrun    build the symcryptrun program
  --enable-gpgtar         build the gpgtar program
  --enable-agent-only     build only the gpg-agent
  --disable-bzip2         disable the BZIP2 compression algorithm
  --disable-exec          disable all external program execution
  --disable-photo-viewers disable photo ID viewers
  --disable-keyserver-helpers  disable all external keyserver support
  --disable-ldap          disable LDAP keyserver interface only
  --disable-hkp           disable HKP keyserver interface only
  --disable-finger        disable finger key fetching interface only
  --disable-generic       disable generic object key fetching interface only
  --enable-mailto         enable email keyserver interface only
  --disable-keyserver-path disable the exec-path option for keyserver helpers
  --enable-key-cache=SIZE Set key cache to SIZE (default 4096)
  --disable-ccid-driver   disable the internal CCID driver
  --enable-standard-socket use a standard socket for the agent by default
  --disable-dns-srv       disable the use of DNS SRV in HKP and HTTP
  --disable-dns-pka       disable the use of PKA records in DNS
  --disable-dns-cert      disable the use of CERT records in DNS
  --disable-nls           do not use Native Language Support
  --disable-endian-check  disable the endian check and trust the OS provided macros
  --disable-regex         do not handle regular expressions in trust signatures
  --with-agent-pgm=PATH  Use PATH as the default for the agent)
  --with-pinentry-pgm=PATH  Use PATH as the default for the pinentry)
  --with-scdaemon-pgm=PATH  Use PATH as the default for the scdaemon)
  --with-dirmngr-pgm=PATH  Use PATH as the default for the dirmngr)
  --with-protect-tool-pgm=PATH  Use PATH as the default for the protect-tool)
  --with-photo-viewer=FIXED_VIEWER  set a fixed photo ID viewer
  --with-capabilities     use linux capabilities default=no
  --with-tar=PATH         look for a tar program in PATH
  --with-libgpg-error-prefix=PFX prefix where GPG Error is installed (optional)
  --with-libgcrypt-prefix=PFX    prefix where LIBGCRYPT is installed (optional)
  --with-libassuan-prefix=PFX    prefix where LIBASSUAN is installed (optional)
  --with-ksba-prefix=PFX  prefix where KSBA is installed (optional)
  --with-pth-prefix=PFX   prefix where GNU Pth is installed
  --with-adns=DIR         look for the adns library in DIR
  --with-ldap=DIR         look for the LDAP library in DIR
  --with-libcurl=DIR      look for the curl library in DIR
  --with-mailprog=NAME    use "NAME -t" for mail transport
  --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib
  --without-libiconv-prefix     don't search for libiconv in includedir and libdir
  --with-libintl-prefix[=DIR]  search for libintl in DIR/include and DIR/lib
  --without-libintl-prefix     don't search for libintl in includedir and libdir
  --with-regex=DIR        look for regex in DIR
  --with-zlib=DIR         use libz in DIR
  --with-bzip2=DIR        look for bzip2 in DIR
  --with-readline=DIR     look for the readline library in DIR
    </commands>
  </set>

  <set version="2.0.22" date="2014-10-04" state="works">
    <flags>
    </flags>

    <downloads>
      <download file="gnupg-2.0.22.tar.bz2">
        <url type="direct" checked="2014-01-22">ftp://ftp.gnupg.org/gcrypt/gnupg/gnupg-2.0.22.tar.bz2</url>
        <hash type="CRC32"></hash>
        <hash type="MD5"></hash>
        <hash type="SHA1"></hash>
        <hash type="SHA512"></hash>
        <hash type="RIPEMD256"></hash>
        <size></size>
      </download>
    </downloads>

    <commands>
PACKAGE_NAME=gnupg
PACKAGE_VERSION=2.0.22

oegimport libiconv
oegimport gettext
oegimport libgpg-error
#oegimport  libiconv
#oegimport  gettext
oegimport libassuan          # optional, +pth support!
#oegimport  libgpg-error
#oegimport   libiconv
#oegimport   gettext
oegimport w32pth               # required, pth/w32pth are old, replaced by npth
oegimport libgcrypt          # optional
#oegimport  libgpg-error
#oegimport  libiconv
#oegimport  gettext
#oegimport  pth              # optional
oegimport libksba            # required
#oegimport  libgpg-error
#oegimport   libiconv
#oegimport   gettext

oegextract ${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.bz2

mkdir -p "${OEG_INSTALL_DIR}${OEG_BASE_DIR}/packages/${PACKAGE_NAME}-${PACKAGE_VERSION}"
cp AUTHORS COPYING* README THANKS "${OEG_INSTALL_DIR}${OEG_BASE_DIR}/packages/${PACKAGE_NAME}-${PACKAGE_VERSION}/"

configure --prefix=${OEG_BASE_DIR} --with-gnu-ld --disable-rpath --bindir=${OEG_BASE_BIN_DIR} --libdir=${OEG_BASE_LIB_DIR} ${CONFIGURE_HOST_PARA}

# TODO: check in 64 bit make if there is an error which prevents the automatic
# correction of libassuan.def. maybe export symbols are missing...?






make
#make check
make install-strip DESTDIR=${OEG_INSTALL_DIR}

cd "${OEG_INSTALL_DIR}${OEG_BASE_DIR}"
<if64bits>
mv bin/*.dll bin64/
rm -rf bin
# TODO: Do we need to edit the .la files in lib64?
</if64bits>
oegarchive ${PACKAGE_NAME}-${PACKAGE_VERSION}
    </commands>
  </set>
</pack>

