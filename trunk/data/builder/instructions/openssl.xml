<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- $Id$ -->

<pack name="openssl" license="Apache-style">
  <meta>
    <homepage>http://www.openssl.org/</homepage>
    <download>http://www.openssl.org/source/</download>
    <descriptions>
      <description lang="en" type="short">OpenSSL toolkit</description>
      <description lang="en" type="long">The OpenSSL Project is a collaborative effort to develop a robust, commercial-grade, full-featured, and Open Source toolkit implementing the Secure Sockets Layer (SSL v2/v3) and Transport Layer Security (TLS v1) protocols as well as a full-strength general purpose cryptography library. OpenSSL is based on the excellent SSLeay library.</description>
      <description lang="de" type="short"></description>
      <description lang="de" type="long"></description>
    </descriptions>
  </meta>

  <comments>
  </comments>

  <set version="1.0.1f" date="2014-01-06" state="works">
    <flags>
    </flags>

    <downloads>
      <download file="openssl-1.0.1f.tar.gz">
        <url checked="2014-01-30">http://www.openssl.org/source/openssl-1.0.1f.tar.gz</url>
        <hash type="CRC32"></hash>
        <hash type="MD5"></hash>
        <hash type="SHA1"></hash>
        <hash type="SHA512"></hash>
        <hash type="RIPEMD256"></hash>
        <size>4.509.212</size>
      </download>
    </downloads>

    <commands>
PACKAGE_NAME=openssl
PACKAGE_VERSION=1.0.1f

oegextract ${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.gz

oeg_include_files LICENSE

oegimport nasm         # for building
oegimport zlib         # linked dynamically!!!

# needs perl to handle config and Configure scripts
# It's possible to cross-compile it on Linux by configuring
# with './Configure --cross-compile-prefix=i386-mingw32- mingw ...'.
# You may call ./config and it will guess the OS and call Configure or you may call:
#./Configure mingw   # only static builds
# zlib or zlib-shared

./Configure --openssldir=${OEG_BASE_DIR}/var/ssl --prefix=${OEG_BASE_DIR} threads shared zlib-dynamic no-hw mingw${OEG_TARGETBITS_DIR_EXT}

# You really should use: tar xzf openssl-x.y.z.tar.gz. Else there are files
# like test/md2test.c which are linked to other files (dummytest.c) and now
# contain only the file name of the target. We fix that now:
cp test/dummytest.c test/md2test.c
cp test/dummytest.c test/rc5test.c
cp test/dummytest.c test/jpaketest.c

# If the script fails with "ld.exe: reopening xy.exe: Permission denied"
# just run make again and it will build.
make

# if you have time:
#make test

# libcrypto.a and libssl.a are the static libraries.
# To use the DLLs, link with libeay32.a and libssl32.a instead.

# Select and copy files manually...
#mkdir -p "${OEG_INSTALL_DIR}${OEG_BASE_DIR}/bin"
#mkdir -p "${OEG_INSTALL_DIR}${OEG_BASE_DIR}/lib"
#mkdir -p "${OEG_INSTALL_DIR}${OEG_BASE_DIR}/include"
#cp -R include/openssl "${OEG_INSTALL_DIR}${OEG_BASE_DIR}/include/"
#cp lib* "${OEG_INSTALL_DIR}${OEG_BASE_DIR}/lib/"   # libcrypto.a, libcrypto.pc, libssl.a, libssl.pc
#cp out32dll\ssleay32.lib c:\openssl\lib
#cp out32dll\libeay32.lib c:\openssl\lib
#cp out32dll\ssleay32.dll c:\openssl\bin
#cp out32dll\libeay32.dll c:\openssl\bin
#cp out32dll\openssl.exe  c:\openssl\bin

# wrong man pages path: var\ssl\man\man3\...

make INSTALL_PREFIX=${OEG_INSTALL_DIR} install

cd "${OEG_INSTALL_DIR}${OEG_BASE_DIR}"
oeg_fix_path_names
# no .la files
oegarchive ${PACKAGE_NAME}-${PACKAGE_VERSION}
    </commands>
  </set>
</pack>

