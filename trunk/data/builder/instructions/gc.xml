<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- $Id$ -->

<pack name="bdw-gc" license="">
  <meta>
    <homepage>http://www.hpl.hp.com/personal/Hans_Boehm/gc/</homepage>
    <download>http://www.hpl.hp.com/personal/Hans_Boehm/gc/gc_source/</download>
    <descriptions>
      <description lang="en" type="short">Boehm-Demers-Weiser conservative garbage collector (BDW GC)</description>
      <description lang="en" type="long"></description>
      <description lang="de" type="short"></description>
      <description lang="de" type="long"></description>
    </descriptions>
  </meta>

  <comments>
  </comments>

  <set version="7.4.0" date="2013-11-20" state="works">
    <flags>
    </flags>

    <downloads>
      <download file="gc-7.4.0.tar.gz">
        <url checked="2014-01-15">http://www.hpl.hp.com/personal/Hans_Boehm/gc/gc_source/gc-7.4.0.tar.gz</url>
        <hash type="CRC32"></hash>
        <hash type="MD5"></hash>
        <hash type="SHA1"></hash>
        <hash type="SHA512"></hash>
        <hash type="RIPEMD256"></hash>
        <size>1.060.884</size>
      </download>
    </downloads>

<!--
--enable-threads=win32 or --enable-threads=pthreads
BDWGC supports two threading models - posix (pthreads) and win32. For Windows (excluding Cygwin) the default is win32 (i.e. BDWGC uses Win32 API for synchronization and intercepts CreateThread invoked by client). Alternatively, you could build BDWGC which uses pthreads-w32 lib (by specifying --enable-threads=pthreads or -D GC_WIN32_PTHREADS) - this is recommended only if the client relies on pthreads-w32 too. Cygwin port of BDWGC uses mostly pthreads API and intercepts pthread_create() invoked by client (but could also intercept Win32 CreateThread starting from GC v7.3).
-->

    <commands>
PACKAGE_NAME=gc
PACKAGE_VERSION=7.4.0

oegextract gc

oeg_include_files AUTHORS README.*

oegimport libatomic_ops      # required, or copy the sources into gc's source tree.

configure --prefix=${OEG_BASE_DIR} --with-gnu-ld --with-sysroot=${OEG_BASE_DIR} --enable-treads=win32 --bindir=${OEG_BASE_BIN_DIR} --libdir=${OEG_BASE_LIB_DIR} ${CONFIGURE_HOST_PARA}
make
make install-strip DESTDIR=${OEG_INSTALL_DIR}

cd "${OEG_INSTALL_DIR}${OEG_BASE_DIR}"
oeg_fix_path_names
oeg_fix_libtool_file libcord.la libcord-1.dll libcord.dll.a libcord.a
oeg_fix_libtool_file libgc.la libgc-1.dll libgc.dll.a libgc.a
oegarchive ${PACKAGE_NAME}-${PACKAGE_VERSION}
    </commands>
  </set>
</pack>

