<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- $Id$ -->

<pack name="yasm" license="">
  <meta>
    <homepage>http://yasm.tortall.net/</homepage>
    <download>http://yasm.tortall.net/Download.html</download>
    <descriptions>
      <description lang="en" type="short">The Yasm Modular Assembler Project</description>
      <description lang="en" type="long">Yasm is a complete rewrite of the NASM assembler under the “new” BSD License (some portions are under other licenses, see COPYING for details). Yasm currently supports the x86 and AMD64 instruction sets, accepts NASM and GAS assembler syntaxes, outputs binary, ELF32, ELF64, 32 and 64-bit Mach-O, RDOFF2, COFF, Win32, and Win64 object formats, and generates source debugging information in STABS, DWARF 2, and CodeView 8 formats. Yasm can be easily integrated into Visual Studio 2005/2008 and 2010 for assembly of NASM or GAS syntax code into Win32 or Win64 object files.</description>
      <description lang="de" type="short"></description>
      <description lang="de" type="long"></description>
    </descriptions>
    <keywords></keywords>
  </meta>

  <comments>
  </comments>

  <set version="1.2.0" date="2011-10-31" state="works">

    <downloads>
      <download file="yasm-1.2.0.tar.gz">
        <url checked="2013-07-27">http://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz</url>
        <hash type="CRC32"></hash>
        <hash type="MD5"></hash>
        <hash type="SHA1"></hash>
        <hash type="SHA512"></hash>
        <hash type="RIPEMD256"></hash>
        <size></size>
      </download>
    </downloads>

<!--
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-maintainer-mode  enable make rules and dependencies not useful
                          (and sometimes confusing) to the casual installer
  --enable-debug          Turn on debugging and compile time warnings
  --enable-warnerror      Treat GCC warnings as errors
  --enable-profiling      Enable profiling (requires GCC)
  --enable-gcov           Enable gcov code coverage (requires GCC)
  --enable-python         Enable Python-requiring portions of build
  --enable-python-bindings
                          Build Python bindings
  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors
  --disable-nls           do not use Native Language Support
  --disable-rpath         do not hardcode runtime library paths

  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-dmalloc          use dmalloc, as in
                          http://www.dmalloc.com/dmalloc.tar.gz
  --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib
  --without-libiconv-prefix     don't search for libiconv in includedir and libdir
  --with-libintl-prefix[=DIR]  search for libintl in DIR/include and DIR/lib
  --without-libintl-prefix     don't search for libintl in includedir and libdir

  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  CC_FOR_BUILD build system C compiler
  CCLD_FOR_BUILD build system C linker frontend
  CPP_FOR_HOST host system C preprocessor
-->

    <commands>
PACKAGE_NAME=yasm
PACKAGE_VERSION=1.2.0
oegenv 32
oegcleanbase
oegextract ${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.gz
oegimport libiconv-1.14
oegimport gettext-0.18.3
oegimport python-??
configure --prefix=${OEG_BASE_DIR} --with-gnu-ld --with-libiconv-prefix=${OEG_BASE_DIR} --with-libintl-prefix=${OEG_BASE_DIR} --disable-rpath

make
make install-strip DESTDIR=${OEG_INSTALL_DIR}
cd "${OEG_INSTALL_DIR}${OEG_BASE_DIR}"
oegarchive ${PACKAGE_NAME}-${PACKAGE_VERSION}
    </commands>
  </set>
</pack>

