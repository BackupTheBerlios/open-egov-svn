<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- $Id$ -->

<pack name="libmicrohttpd" license="">
  <meta>
    <homepage>http://www.gnu.org/software/libmicrohttpd/</homepage>
    <download>http://ftp.gnu.org/gnu/libmicrohttpd/</download>
    <descriptions>
      <description lang="en" type="short">Small HTTP server as C library</description>
      <description lang="en" type="long">GNU libmicrohttpd is a small C library that is supposed to make it easy to run an HTTP server as part of another application. If you want to be able to serve simple WWW pages from within your C or C++ application, check it out.</description>
      <description lang="de" type="short"></description>
      <description lang="de" type="long"></description>
    </descriptions>
    <keywords></keywords>
  </meta>

  <comments>
  </comments>

  <set version="0.9.33" date="2013-12-21" state="not-tried">

    <downloads>
      <download file="libmicrohttpd-0.9.33.tar.gz">
        <url checked="2013-07-30">http://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.33.tar.gz</url>
        <hash type="CRC32"></hash>
        <hash type="MD5"></hash>
        <hash type="SHA1"></hash>
        <hash type="SHA512"></hash>
        <hash type="RIPEMD256"></hash>
        <size></size>
      </download>
    </downloads>

<!--
Third, while gcc can link directly against dlls, it has to know which
dll it's looking for. The convention on Unix is to use a "-l<lib>"
option. Some shortcut (symbolic link) magic then kicks in to redirect
<lib> to the correct <lib>-<version> library. That doesn't happen on
Windows. So, for example, libmicrohttpd uses "-lplibc"--but the actual
dll name is "libplibc-1.dll", and gcc can't find the one from the
other on its own.

In my case--and no doubt this is a little odd--I placed unversioned
dlls in my lib dir. But: each dll knows its original name, and that's
what the linker records. So you still need to distribute the
*versioned* dlls, not the *unversioned* ones. (If this approach
doesn't appeal to you you can travel the more traditional route:
create a .def using pexports and then create a .dll.a from the .def
and .dll files.)

$ cp /mingw/bin/libgcrypt-11.dll /mingw/lib/libgcrypt.dll
$ cp /mingw/bin/libgpg-error-0.dll /mingw/lib/libgpg-error.dll
$ cp /mingw/bin/libiconv-2.dll /mingw/lib/libiconv.dll
$ cp /mingw/bin/libintl-8.dll /mingw/lib/libintl.dll
$ cp /mingw/bin/pthreadGC2.dll /mingw/lib/libpthread.dll

(Note that pthread gets a "lib" prefix.)

$ cd PlibC-0.1.5
$ CFLAGS="-O2 -march=i686" ./configure --prefix=/mingw
$ make
$ make install
$ cd ..

$ cd libmicrohttpd-0.4.4
$ CFLAGS="-O2 -march=i686" ./configure --prefix=/mingw --disable-https
--enable-messages
(Obviously, adjust configure flags as required!)
$ make
$ make install
$ cd ..

The libplibc and libmicrohttpd dlls will now be in /mingw/bin.
-->

    <commands>
PACKAGE_NAME=libmicrohttpd
PACKAGE_VERSION=0.9.33

oegimport curl-7.31.0
oegimport  libidn-1.28       # needs gettext (libintl)
oegimport  gettext-0.18.3    # needs libiconv
oegimport  libiconv-1.14
oegimport  zlib-1.2.8
oegimport  gnutls-3.2.2
oegimport   gmp-5.1.2       # required
oegimport    readline-6.2
oegimport   nettle-2.7.1    # required
#oegimport   zlib-1.2.8      # optional, for compression
oegimport   libtasn1-3.3    # optional, for ASN.1 parsing, a copy is included in GnuTLS
oegimport   p11-kit-0.19.2  # optional, for smart card support
#oegimport    libiconv-1.14
#oegimport    gettext-0.18.3
oegimport    libtasn1-3.3
oegimport    libffi-3.0.13
oegimport  openssl-1.0.1e
#oegimport   zlib-1.2.8
#oegimport openssl-1.0.1e
#oegimport  zlib-1.2.8
oegimport gnutls-3.2.2
#oegimport  gmp-5.1.2       # required
#oegimport   readline-6.2
#oegimport  nettle-2.7.1    # required
#oegimport  zlib-1.2.8      # optional, for compression
#oegimport  libtasn1-3.3    # optional, for ASN.1 parsing, a copy is included in GnuTLS
#oegimport  p11-kit-0.19.2  # optional, for smart card support
#oegimport   libiconv-1.14
#oegimport   gettext-0.18.3
#oegimport   libtasn1-3.3
#oegimport   libffi-3.0.13
oegimport plibc-0.1.7

oegextract ${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.gz

#--with-libgcrypt-prefix= optional
configure --prefix=${OEG_BASE_DIR} --with-gnu-ld --with-sysroot=${OEG_BASE_DIR} --with-libcurl=${OEG_BASE_DIR} --with-openssl=${OEG_BASE_DIR} --with-gnutls=${OEG_BASE_DIR}
make
make install-strip DESTDIR=${OEG_INSTALL_DIR}
cd "${OEG_INSTALL_DIR}${OEG_BASE_DIR}"
oegarchive ${PACKAGE_NAME}-${PACKAGE_VERSION}
    </commands>
  </set>
</pack>

