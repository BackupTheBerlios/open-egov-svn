<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- $Id$ -->

<pack name="libjpeg-turbo" license="">
  <meta>
    <homepage>http://www.libjpeg-turbo.org/</homepage>
    <homepage>http://libjpeg-turbo.virtualgl.org/</homepage>
    <homepage>http://sourceforge.net/projects/libjpeg-turbo/</homepage>
    <download>http://sourceforge.net/projects/libjpeg-turbo/files/</download>
    <descriptions>
      <description lang="en" type="short"></description>
      <description lang="en" type="long">libjpeg-turbo is a derivative of libjpeg that uses MMX, SSE, SSE2, and NEON SIMD instructions to accelerate baseline JPEG compression/decompression by about 2-4x on x86, x86-64, and ARM platforms. It is based on libjpeg/SIMD but has numerous enhancements.</description>
      <description lang="de" type="short"></description>
      <description lang="de" type="long"></description>
    </descriptions>
    <keywords></keywords>
  </meta>

  <comments>
  </comments>

  <set version="1.3.0" date="2013-05-25" state="works">

    <downloads>
      <download file="libjpeg-turbo-1.3.0.tar.gz">
        <url checked="2014-01-16">http://sourceforge.net/projects/libjpeg-turbo/files/1.3.0/libjpeg-turbo-1.3.0.tar.gz/download</url>
        <hash type="CRC32"></hash>
        <hash type="MD5"></hash>
        <hash type="SHA1"></hash>
        <hash type="SHA512"></hash>
        <hash type="RIPEMD256"></hash>
        <size></size>
      </download>
    </downloads>

<!--
  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors
  --enable-shared[=PKGS]
                          build shared libraries [default=yes]
  --enable-static[=PKGS]
                          build static libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --disable-ld-version-script
                          Disable linker version script for libjpeg-turbo
                          (default is to use linker version script if the
                          linker supports it)
  --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
  --with-pic              try to use only PIC/non-PIC objects [default=use
                          both]
  --with-tags[=TAGS]
                          include additional configurations [automatic]
  --with-jpeg7            Emulate libjpeg v7 API/ABI (this makes libjpeg-turbo
                          backward incompatible with libjpeg v6b.)
  --with-jpeg8            Emulate libjpeg v8 API/ABI (this makes libjpeg-turbo
                          backward incompatible with libjpeg v6b.)
  --without-mem-srcdst    Do not include in-memory source/destination manager
                          functions when emulating the libjpeg v6b or v7
                          API/ABI
  --without-arith-enc     Do not include arithmetic encoding support
  --without-arith-dec     Do not include arithmetic decoding support
  --without-turbojpeg     Do not include the TurboJPEG wrapper library and
                          associated test programs
  --with-java             Build Java wrapper for the TurboJPEG library
  --with-gas-preprocessor Force using gas-preprocessor.pl on ARM.
  --without-simd          Do not include SIMD extensions
-->

    <commands>
PACKAGE_NAME=libjpeg-turbo
PACKAGE_VERSION=1.3.0

oegimport nasm       # libtool says "ignoring unknown tag NASM", but nasm is used...

oegextract ${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.gz

mkdir -p "${OEG_INSTALL_DIR}${OEG_BASE_DIR}/packages/${PACKAGE_NAME}-${PACKAGE_VERSION}"
cp README "${OEG_INSTALL_DIR}${OEG_BASE_DIR}/packages/${PACKAGE_NAME}-${PACKAGE_VERSION}/"

# need a static lib, else we have to install libjpeg and ljpeg-turbo at the same time and maybe path.
JPEG_LIB_VERSION="62" configure --prefix=${OEG_BASE_DIR} --with-gnu-ld --enable-static --enable-shared --without-jpeg7 --without-jpeg8 --bindir=${OEG_BASE_BIN_DIR} --libdir=${OEG_BASE_LIB_DIR} ${CONFIGURE_HOST_PARA}
make
make install-strip DESTDIR=${OEG_INSTALL_DIR}

cd "${OEG_INSTALL_DIR}${OEG_BASE_DIR}"
<if64bits>
mv bin/*.dll bin64/
rm -rf bin
# TODO: Do we need to edit the .la files in lib64?
</if64bits>
oegarchive ${PACKAGE_NAME}-${PACKAGE_VERSION}
    </commands>
  </set>
</pack>

