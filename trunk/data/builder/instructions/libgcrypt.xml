<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- $Id$ -->

<pack name="libgcrypt" license="">
  <meta>
    <homepage>http://www.gnupg.org/download/</homepage>
    <!-- http://www.gnu.org/software/libgcrypt/ -->
    <download>http://www.gnupg.org/download/</download>
    <!-- ftp://ftp.gnupg.org/gcrypt/alpha/libgcrypt/ -->
    <descriptions>
      <description lang="en" type="short"></description>
      <description lang="en" type="long">Libgcrypt is a general purpose cryptographic library based on the code from GnuPG. It provides functions for all cryptographic building blocks: symmetric ciphers, hash algorithms, MACs, public key algorithms, large integer functions, random numbers and a lot of supporting functions. </description>
      <description lang="de" type="short"></description>
      <description lang="de" type="long"></description>
    </descriptions>
    <keywords>libgcrypt, gnupg</keywords>
  </meta>

  <comments>
  </comments>

<!--
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-maintainer-mode  enable make rules and dependencies not useful
                          (and sometimes confusing) to the casual installer
  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors
  --enable-static[=PKGS]  build static libraries [default=no]
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-fast-install[=PKGS]
                          optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --disable-endian-check  disable the endian check and trust the OS provided
                          macros
  --enable-ciphers=ciphers
                          select the symmetric ciphers to include
  --enable-pubkey-ciphers=ciphers
                          select the public-key ciphers to include
  --enable-digests=digests
                          select the message digests to include
  --enable-random=name    select which random number generator to use
  --disable-dev-random    disable the use of dev random
  --enable-random-daemon  Build and support the experimental gcryptrnd
  --disable-asm           Disable MPI assembler modules
  --enable-m-guard        Enable memory guard facility
  --enable-hmac-binary-check
                          Enable library integrity check
  --disable-padlock-support
                          Disable support for the PadLock Engine of VIA
                          processors
  --disable-aesni-support Disable support for the Intel AES-NI instructions
  --disable-O-flag-munging
                          Disable modification of the cc -O flag
  --enable-ld-version-script
                          enable/disable use of linker version script.
                          (default is system dependent)
  --enable-mpi-path=EXTRA_PATH
                          prepend EXTRA_PATH to list of CPU specific
                          optimizations
  --disable-optimization  disable compiler optimization
  --disable-noexecstack   disable non executable stack support

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --with-egd-socket=NAME  Use NAME for the EGD socket)
  --with-capabilities     Use linux capabilities [default=no]
  --with-gpg-error-prefix=PFX     prefix where GPG Error is installed (optional)
  --with-pth-prefix=PFX   prefix where GNU Pth is installed (optional)

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
              nonstandard directory <lib dir>
  LIBS        libraries to pass to the linker, e.g. -l<library>
  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
              you have headers in a nonstandard directory <include dir>
  CPP         C preprocessor
  CCAS        assembler compiler command (defaults to CC)
  CCASFLAGS   assembler compiler flags (defaults to CFLAGS)
-->

  <set version="1.6.0" date="2013-12-16" state="works">

    <downloads>
      <download file="libgcrypt-1.6.0.tar.bz2">
        <url type="direct" checked="2014-01-15">ftp://ftp.gnupg.org/gcrypt/libgcrypt/libgcrypt-1.6.0.tar.bz2</url>
        <hash type="CRC32"></hash>
        <hash type="MD5"></hash>
        <hash type="SHA1"></hash>
        <hash type="SHA512"></hash>
        <hash type="RIPEMD256"></hash>
        <size>2.499.149</size>
      </download>
    </downloads>

    <commands>
PACKAGE_NAME=libgcrypt
PACKAGE_VERSION=1.6.0

oegimport libgpg-error       # optional
oegimport  libiconv
oegimport  gettext
#oegimport gnupth             # optional

oegextract ${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.bz2

<if64bits>
# nur 1.6.0?
oegpatch 002       # configure searched for ../bin/gpg-error-config instead of ../bin64/gpg-error-config
</if64bits>

configure --prefix=${OEG_BASE_DIR} --with-gpg-error-prefix=${OEG_BASE_DIR} --enable-shared --with-gnu-ld --with-sysroot=${OEG_BASE_DIR} --disable-rpath --bindir=${OEG_BASE_BIN_DIR} --libdir=${OEG_BASE_LIB_DIR} ${CONFIGURE_HOST_PARA} --enable-threads=win32 --disable-padlock-support

#nur version 1.5.3?
#oegpatch 001       # Removes leading comments from src/libgcrypt.def, EXPORTS needs to be on the first line!

#64 bit error:
#make[2]: Entering directory `/work/libgcrypt-1.6.0/random'
#/bin/sh ../libtool --tag=CC    --mode=compile x86_64-w64-mingw32-gcc -DHAVE_CONFIG_H -I. -I..   -I../src -I../src -I/open-egovernment/include -I/open-egovernment/include -m64 -march=nocona -mtune=core2 -pipe -Wall -O2 -mms-bitfields -Wall -MT rndhw.lo -MD -MP -MF .deps/rndhw.Tpo -c -o rndhw.lo rndhw.c
#libtool: compile:  x86_64-w64-mingw32-gcc -DHAVE_CONFIG_H -I. -I.. -I../src -I../src -I/open-egovernment/include -I/open-egovernment/include -m64 -march=nocona -mtune=core2 -pipe -Wall -O2 -mms-bitfields -Wall -MT rndhw.lo -MD -MP -MF .deps/rndhw.Tpo -c rndhw.c  -DDLL_EXPORT -DPIC -o .libs/rndhw.o
#{standard input}: Assembler messages:
#{standard input}:25: Error: unsupported instruction `mov'
#Makefile:386: recipe for target `rndhw.lo' failed
#make[2]: *** [rndhw.lo] Error 1
#make[2]: Leaving directory `/work/libgcrypt-1.6.0/random'
# maybe a 64 bit error, switching asm off: --disable-asm did not help, --disable-padlock-support works

make
make install-strip DESTDIR=${OEG_INSTALL_DIR}

cd "${OEG_INSTALL_DIR}${OEG_BASE_DIR}"
<if64bits>
mv bin/*.dll bin64/
rm -rf bin
# TODO: Do we need to edit the .la files in lib64?
</if64bits>
oegarchive ${PACKAGE_NAME}-${PACKAGE_VERSION}
    </commands>
  </set>
</pack>

