<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- $Id$ -->

<pack name="libsamplerate" license="GNU GPL and a Commercial License">
  <meta>
    <homepage>http://www.mega-nerd.com/SRC/</homepage>
    <download>http://www.mega-nerd.com/SRC/download.html</download>
    <descriptions>
      <description lang="en" type="short"></description>
      <description lang="en" type="long"></description>
      <description lang="de" type="short"></description>
      <description lang="de" type="long"></description>
    </descriptions>
  </meta>

  <comments>
  </comments>

  <set version="0.1.8" date="2011-08-15" state="works">

    <downloads>
      <download file="libsamplerate-0.1.8.tar.gz">
        <url checked="2013-07-31">http://www.mega-nerd.com/SRC/libsamplerate-0.1.8.tar.gz</url>
        <hash type="CRC32"></hash>
        <hash type="MD5"></hash>
        <hash type="SHA1"></hash>
        <hash type="SHA512"></hash>
        <hash type="RIPEMD256"></hash>
        <size></size>
      </download>
    </downloads>

<!--
Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --enable-silent-rules          less verbose build output (undo: `make V=1')
  --disable-silent-rules         verbose build output (undo: `make V=0')
  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors
  --enable-shared[=PKGS]  build shared libraries [default=yes]
  --enable-static[=PKGS]  build static libraries [default=yes]
  --enable-fast-install[=PKGS]   optimize for fast installation [default=yes]
  --disable-libtool-lock  avoid locking (might break parallel builds)
  --enable-gcc-werror     enable -Werror in all Makefiles
  --disable-gcc-pipe      disable gcc -pipe option
  --disable-gcc-opt       disable gcc optimisations
  --disable-fftw          disable usage of FFTW
  --disable-cpu-clip      disable tricky cpu specific clipper
  --disable-sndfile       disable support for sndfile (default=autodetect)
-->

    <commands>
PACKAGE_NAME=libsamplerate
PACKAGE_VERSION=0.1.8

oegimport libsndfile
#oegimport fftw         # only needed for building tests

oegextract ${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.gz

mkdir -p "${OEG_INSTALL_DIR}${OEG_BASE_DIR}/packages/${PACKAGE_NAME}-${PACKAGE_VERSION}"
cp AUTHORS COPYING ChangeLog NEWS README "${OEG_INSTALL_DIR}${OEG_BASE_DIR}/packages/${PACKAGE_NAME}-${PACKAGE_VERSION}/"

# configure findet FFTW3 nicht von allein!
#FFTW3_LIBS="${OEG_BASE_LIB_DIR}/libfftw3f.la"
#FFTW3_LIBS="-L${OEG_BASE_LIB_DIR} -lfftw3f" FFTW3_CFLAGS="-I ${OEG_BASE_DIR}/include"
# Linken gegen FFTW 3.3.3 klappt nicht:
#multi_channel_test-calc_snr.o:calc_snr.c:(.text+0x136): undefined reference to `fftw_plan_r2r_1d'
#multi_channel_test-calc_snr.o:calc_snr.c:(.text+0x14f): undefined reference to `fftw_execute'
#multi_channel_test-calc_snr.o:calc_snr.c:(.text+0x159): undefined reference to `fftw_destroy_plan'
# daher: --disable-fftw
# müsste eigentlich auch von alleine die lib ignorieren, wenn sie nicht da ist.

configure --prefix=${OEG_BASE_DIR} --with-gnu-ld --with-sysroot=${OEG_BASE_DIR} --enable-shared --bindir=${OEG_BASE_BIN_DIR} --libdir=${OEG_BASE_LIB_DIR} ${CONFIGURE_HOST_PARA} --disable-fftw

make
make install-strip DESTDIR=${OEG_INSTALL_DIR}

cd "${OEG_INSTALL_DIR}${OEG_BASE_DIR}"
<if64bits>
mv bin/*.dll bin64/
rm -rf bin
# TODO: Do we need to edit the .la files in lib64?
</if64bits>
oegarchive ${PACKAGE_NAME}-${PACKAGE_VERSION}
    </commands>
  </set>
</pack>

