<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<!-- $Id$ -->

<pack name="p11-kit" license="">
  <meta>
    <homepage>http://p11-glue.freedesktop.org/p11-kit.html</homepage>
    <download>http://p11-glue.freedesktop.org/releases/</download>
    <descriptions>
      <description lang="en" type="short"></description>
      <description lang="en" type="long">Provides a way to load and enumerate PKCS#11 modules. Provides a standard configuration setup for installing PKCS#11 modules in such a way that they're discoverable. Also solves problems with coordinating the use of PKCS#11 by different components or libraries living in the same process.</description>
      <description lang="de" type="short"></description>
      <description lang="de" type="long"></description>
    </descriptions>
    <keywords></keywords>
  </meta>

  <comments>
  </comments>

  <set version="0.20.2" date="2014-01-15" state="not-tried">

    <downloads>
      <download file="p11-kit-0.20.2.tar.gz">
        <url checked="2014-01-20">http://p11-glue.freedesktop.org/releases/p11-kit-0.20.2.tar.gz</url>
        <hash type="CRC32"></hash>
        <hash type="MD5"></hash>
        <hash type="SHA1"></hash>
        <hash type="SHA512"></hash>
        <hash type="RIPEMD256"></hash>
        <size>979.999</size>
      </download>
    </downloads>

<!--
  --with-libiconv-prefix[=DIR]  search for libiconv in DIR/include and DIR/lib
  --without-libiconv-prefix     don't search for libiconv in includedir and libdir
  --with-libintl-prefix[=DIR]  search for libintl in DIR/include and DIR/lib
  --without-libintl-prefix     don't search for libintl in includedir and libdir
  --with-system-config    Change PKCS#11 system config directory
  --with-system-config    Change PKCS#11 user config directory
  --with-module-path      Load modules with relative path names from here
  --without-libtasn1      Disable dependency on libtasn1
  --without-libffi        Don't use libffi for building closures
  --with-hash-impl=[freebl/internal]   Choose the hash implementation to use
  --without-trust-paths
  --with-trust-paths=[path]: input paths for trust module
  --with-html-dir=PATH    path to installed docs

PKG_CONFIG  path to pkg-config utility
PKG_CONFIG_PATH
            directories to add to pkg-config's search path
PKG_CONFIG_LIBDIR
            path overriding pkg-config's built-in search path
LIBTASN1_CFLAGS
            C compiler flags for LIBTASN1, overriding pkg-config
LIBTASN1_LIBS
            linker flags for LIBTASN1, overriding pkg-config
LIBFFI_CFLAGS
            C compiler flags for LIBFFI, overriding pkg-config
LIBFFI_LIBS linker flags for LIBFFI, overriding pkg-config
-->
    <commands>
PACKAGE_NAME=p11-kit
PACKAGE_VERSION=0.20.2

oegimport libiconv
oegimport gettext
oegimport libtasn1
oegimport libffi
# gtkdoc xsltrans

oegextract ${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.gz

mkdir -p "${OEG_INSTALL_DIR}${OEG_BASE_DIR}/packages/${PACKAGE_NAME}-${PACKAGE_VERSION}"
cp AUTHORS COPYING README "${OEG_INSTALL_DIR}${OEG_BASE_DIR}/packages/${PACKAGE_NAME}-${PACKAGE_VERSION}/"

cd ..
oegpatch 001      # Renamed all occurences of build/aux to build/_aux,
                  # because an "aux" directory is not possible on the Windows plattform.
cd ${PACKAGE_NAME}-${PACKAGE_VERSION}

configure --prefix=${OEG_BASE_DIR} --with-sysroot=${OEG_BASE_DIR} --with-libiconv-prefix=${OEG_BASE_DIR} --with-libintl-prefix=${OEG_BASE_DIR} --with-gnu-ld --enable-shared --disable-doc --disable-doc-html --disable-doc-pdf --without-trust-paths --bindir=${OEG_BASE_BIN_DIR} --libdir=${OEG_BASE_LIB_DIR} ${CONFIGURE_HOST_PARA}

# jetzt kam bei jedem Aufruf von "make" immer eine Meldung, dass irgendwelche
# Dateien nicht aktuell waren:
#
#$ make
#CDPATH="${ZSH_VERSION+.}:" && cd . && /bin/sh /work/p11-kit-0.20.2/build/_aux/missing aclocal-1.13 -I build/m4
#/work/p11-kit-0.20.2/build/_aux/missing: line 81: aclocal-1.13: command not found
#WARNING: 'aclocal-1.13' is missing on your system.
#         You should only need it if you modified 'acinclude.m4' or
#         'configure.ac' or m4 files included by 'configure.ac'.

automake

oegpatch 002       # test-token.c: mingw has no getuid() function. Skipped this code.

make

oegpatch 003       # copy lib instead of creating a link

# install failed here (v0.19.2):
# cp -pR $(DESTDIR)$(libdir)/libp11-kit.so $(DESTDIR)$(libdir)/p11-kit-proxy.so
# wrong path and extension of library, we have a bin/*.dll! just copy the DLL??
#oegpatch 002      # old

make install-strip DESTDIR=${OEG_INSTALL_DIR}

# make always fails at the end. Why? TODO..

cd "${OEG_INSTALL_DIR}${OEG_BASE_DIR}"
<if64bits>
mv bin/*.dll bin64/
rm -rf bin
# TODO: Do we need to edit the .la files in lib64?
</if64bits>
oegarchive ${PACKAGE_NAME}-${PACKAGE_VERSION}
    </commands>
  </set>
</pack>

